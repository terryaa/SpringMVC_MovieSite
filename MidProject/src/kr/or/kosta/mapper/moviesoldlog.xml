<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="moviesoldlog">
<resultMap id="month_count" type="hashmap">
	<result property="month" column="month"></result>
	<result property="count" column="count"></result>
</resultMap>
	<!-- 모든 영화 구매 로그 카운트 -->

	<select id="moviesoldlogprice_all" resultType="int">
select sum(p.movie_real_price) from movie_sold_log msl,price p 
where p.movie_price=msl.movie_price
	</select>
	<select id="moviesoldlogprice_currentdate" resultType="int">
select sum(p.movie_real_price) from movie_sold_log msl,price p 
where p.movie_price=msl.movie_price and trunc(msl.movie_sold_date)=trunc(sysdate)
	</select>
		<select id="moviesoldlogprice_yesterday" resultType="int">
select sum(p.movie_real_price) from movie_sold_log msl,price p 
where p.movie_price=msl.movie_price and trunc(msl.movie_sold_date)=trunc(sysdate-1)
	</select>
	<select id="moviesoldlogcount_all" resultType="int">
		select count (*)
		from moviesoldlog
	</select>
	<!-- 오늘의 영화 구매로그 카운트 -->
	<select id="moviesoldlogcount_currentdate" resultType="int">
		select
		count (*) from movie_sold_log where trunc(movie_sold_date) like trunc(sysdate)
	</select>
	<!-- 최근 5일간의 영화 구매 수 카운트(배열) -->
	<select id="moviesoldlogcount_days" resultMap="month_count">
		<![CDATA[
		select  extract(day from trunc(movie_sold_date)) as month,count(*) from movie_sold_log
		group by trunc(movie_sold_date)
		having trunc(movie_sold_date)<=trunc(sysdate) and trunc(movie_sold_date)>=(trunc(sysdate)-5) order by
		trunc(movie_sold_date) asc
		]]>
	</select>
	<!-- 최근 5달간의 영화 구매 수 카운트(배열) -->
	<select id="moviesoldlogcount_months" resultMap="month_count">
		<![CDATA[
		select extract(month from trunc(movie_sold_date) ) as month,sum(count) as count from
		(select trunc(movie_sold_date) ,count(*) as count from movie_sold_log
		group by trunc(movie_sold_date)
		having trunc(movie_sold_date) <=last_day(trunc(sysdate)) and trunc(movie_sold_date) >=last_day(
		add_months(trunc(sysdate),-5) )
		order by trunc(movie_sold_date) asc)
		group by extract(month from trunc(movie_sold_date) )
		order by extract(month from trunc(movie_sold_date) ) asc
		]]>
	</select>
	<!-- 최근 5년간의 영화 구매 수 카운트(배열) -->
	<select id="moviesoldlogcount_years" resultMap="month_count">
		<![CDATA[
		select  extract(year from trunc(movie_sold_date)) as month ,count(*) from movie_sold_log
		group by extract(year from trunc(movie_sold_date))
		having
		extract(year from trunc(movie_sold_date)) <= extract(year from trunc(sysdate)) and
		extract(year from trunc(movie_sold_date)) >= (extract(year from trunc(sysdate))-4)
		order by extract(year from trunc(movie_sold_date)) asc
		]]>
	</select>



	<select id="moviesoldprice_days" resultMap="month_count">
		<![CDATA[
select extract(day from trunc(movie_sold_date)) as month,sum(price) as count from 
(select p.movie_real_price as price, msl.movie_sold_date from price p,movie_sold_log msl
where p.movie_price=msl.movie_price and trunc(movie_sold_date)<=trunc(sysdate) and trunc(movie_sold_date)>=(trunc(sysdate)-5)
        )
group by trunc(movie_sold_date)
order by  trunc(movie_sold_date) asc 
		]]>
	</select>
	<!-- 최근 5달간의 영화 구매 수 카운트(배열) -->
	<select id="moviesoldprice_months" resultMap="month_count">
		<![CDATA[
select extract(month from trunc(movie_sold_date)) as month,sum(price) as count from 
(select p.movie_real_price as price, msl.movie_sold_date from price p,movie_sold_log msl
where p.movie_price=msl.movie_price and trunc(movie_sold_date) <=last_day(trunc(sysdate)) and trunc(movie_sold_date) >=last_day(
		add_months(trunc(sysdate),-5) )
        )
group by extract(month from trunc(movie_sold_date))
order by extract(month from trunc(movie_sold_date))
		]]>
	</select>
	<!-- 최근 5년간의 영화 구매 수 카운트(배열) -->
	<select id="moviesoldprice_years" resultMap="month_count">
		<![CDATA[
select  extract(year from trunc(movie_sold_date))-2000 as month,sum(price) as count from 
(select p.movie_real_price as price, msl.movie_sold_date from price p,movie_sold_log msl
where p.movie_price=msl.movie_price and extract(year from trunc(movie_sold_date)) <= extract(year from trunc(sysdate)) and
		extract(year from trunc(movie_sold_date)) >= (extract(year from trunc(sysdate))-4)
        )
group by extract(year from trunc(movie_sold_date))
order by extract(year from trunc(movie_sold_date)) asc 
		]]>
	</select>
</mapper>
